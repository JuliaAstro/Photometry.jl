var documenterSearchIndex = {"docs":
[{"location":"index.html#","page":"Home","title":"Home","text":"CurrentModule = Photometry","category":"page"},{"location":"index.html#Photometry-1","page":"Home","title":"Photometry","text":"","category":"section"},{"location":"index.html#","page":"Home","title":"Home","text":"","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"Modules = [Photometry]","category":"page"},{"location":"index.html#Photometry.aperture_photometry-Tuple{Photometry.Aperture,AbstractArray{T,2} where T}","page":"Home","title":"Photometry.aperture_photometry","text":"aperture_photometry(::Aperture, data::AbstractMatrix)\naperture_photometry(::AbstractVector{<:Aperture}, data::AbstractMatrix)\n\nPerform aperture photometry on data given aperture(s). If a list of apertures is provided the output will be a DataFrame, otherwise a NamedTuple.\n\n\n\n\n\n","category":"method"},{"location":"index.html#Photometry.area-Tuple{Photometry.Aperture}","page":"Home","title":"Photometry.area","text":"area(::Aperture)\n\nReturns the geometric area of the aperture\n\n\n\n\n\n","category":"method"},{"location":"index.html#Photometry.mask-Tuple{Photometry.Aperture}","page":"Home","title":"Photometry.mask","text":"mask(::Aperture)\n\nReturn a BitArray of the masked aperture values in the minimum bounding box\n\n\n\n\n\n","category":"method"},{"location":"index.html#Photometry.bbox-Tuple{Photometry.Aperture}","page":"Home","title":"Photometry.bbox","text":"bbox(::Aperture)\n\nReturn the (xlow, xhigh, ylow, yhigh) bounds for a given Aperture\n\n\n\n\n\n","category":"method"}]
}
